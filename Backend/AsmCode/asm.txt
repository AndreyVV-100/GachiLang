push 0
pop rax
push 0
pop [rax]
push 2
pop [rax + 1]
call :♂sex♂
hlt

♂sex♂:

push rax
push [rax + 1]
add
pop rbx
push rax
pop [rbx]
push rbx
pop  rax

push 5
pop [rax + 1]
in
pop [rax + 2]
in
pop [rax + 3]
in
pop [rax + 4]
push [rax + 2]
push [rax + 3]
push [rax + 4]
call :♂SqrtFisting♂
push 0

push [rax]
pop rax
ret

♂SqrtFisting♂:

push rax
push [rax + 1]
add
pop rbx
push rax
pop [rbx]
push rbx
pop  rax

push 7
pop [rax + 1]
pop [rax + 4]
pop [rax + 3]
pop [rax + 2]
push [rax + 2]
push 0
jne :cond_no0
push [rax + 3]
push [rax + 4]
call :♂LinearFisting♂

push [rax]
pop rax
ret
cond_no0:
push [rax + 3]
push 2
pow
push 4
push [rax + 2]
mul
push [rax + 4]
mul
sub
pop [rax + 5]
push [rax + 5]
push 0
jae :cond_no1
push 0
out
push 0

push [rax]
pop rax
ret
cond_no1:
push [rax + 5]
push 0
jne :cond_no2
push 1
out
push 0
push 1
sub
push [rax + 3]
mul
push 2
div
push [rax + 2]
div
pop [rax + 6]
push [rax + 6]
out
push 1

push [rax]
pop rax
ret
cond_no2:
push [rax + 5]
push 0.5
pow
pop [rax + 5]
push 2
out
push 0
push [rax + 3]
sub
push [rax + 5]
sub
push 2
div
push [rax + 2]
div
pop [rax + 6]
push [rax + 6]
out
push 0
push [rax + 3]
sub
push [rax + 5]
add
push 2
div
push [rax + 2]
div
pop [rax + 6]
push [rax + 6]
out
push 2

push [rax]
pop rax
ret

♂LinearFisting♂:

push rax
push [rax + 1]
add
pop rbx
push rax
pop [rbx]
push rbx
pop  rax

push 5
pop [rax + 1]
pop [rax + 3]
pop [rax + 2]
push [rax + 2]
push 0
jne :cond_no3
push [rax + 3]
push 0
jne :cond_no4
push 0
push 1
sub
pop [rax + 4]
push [rax + 4]
out
push [rax + 4]

push [rax]
pop rax
ret
cond_no4:
push 0
out
push 0

push [rax]
pop rax
ret
cond_no3:
push 1
out
push 0
push 1
sub
push [rax + 3]
mul
push [rax + 2]
div
pop [rax + 4]
push [rax + 4]
out
push 1

push [rax]
pop rax
ret
